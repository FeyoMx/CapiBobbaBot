# .env.example - CapiBobbaBot con Sistema de Monitoreo
# Copia este archivo a .env y rellena los valores correspondientes
# ¡NUNCA subas tu archivo .env a un repositorio de Git!

# === CONFIGURACIÓN BÁSICA DEL BOT ===

# Credenciales de la API de WhatsApp de Meta
VERIFY_TOKEN="tu_token_de_verificacion_secreto"
WHATSAPP_TOKEN="tu_token_de_acceso_permanente_secreto"
PHONE_NUMBER_ID="tu_id_de_numero_de_telefono"

# Clave de API de Google Gemini
GEMINI_API_KEY="tu_api_key_de_gemini_secreta"

# Números de WhatsApp de los administradores (separados por coma, sin espacios)
# Ejemplo: 521XXXXXXXXXX,521YYYYYYYYYY
ADMIN_WHATSAPP_NUMBERS="tu_numero_de_admin1,tu_numero_de_admin2"

# URL del Webhook de n8n para recibir los eventos del bot
N8N_WEBHOOK_URL="https://tu-instancia.n8n.com/webhook/tu-id-de-webhook"

# URL de conexión a tu base de datos Redis para persistir el estado de las conversaciones
# Ejemplo local (Docker): REDIS_URL="redis://localhost:6379"
# Ejemplo cloud: REDIS_URL="redis://user:password@host:port"
REDIS_URL="redis://user:password@host:port"

# Versión de la API de WhatsApp (opcional, por defecto v18.0)
WHATSAPP_API_VERSION="v18.0"

# === CONFIGURACIÓN DEL SISTEMA DE MONITOREO ===

# Puerto para el servidor principal (opcional, por defecto 3000)
PORT=3000

# Puerto para el servidor WebSocket de monitoreo (opcional, por defecto 3001)
WEBSOCKET_PORT=3001

# URL base del bot (para generar enlaces al dashboard)
BASE_URL="https://tu-bot.render.com"

# URL específica del dashboard de monitoreo (opcional, se genera automáticamente)
MONITORING_URL="https://tu-bot.render.com/monitoring"

# === NOTIFICACIONES TELEGRAM (OPCIONAL) ===

# Token del bot de Telegram para alertas críticas
# Obtén uno creando un bot con @BotFather en Telegram
TELEGRAM_BOT_TOKEN="1234567890:ABCdefGHIjklMNOpqrsTUVwxyz"

# ID del chat de Telegram donde enviar alertas
# Obtén tu chat ID enviando un mensaje a @userinfobot
TELEGRAM_CHAT_ID="123456789"

# === CONFIGURACIÓN DE UMBRALES DE ALERTAS ===

# Umbral de uso de CPU para alertas (porcentaje, por defecto 80)
CPU_THRESHOLD=80

# Umbral de uso de memoria para alertas (porcentaje, por defecto 85)
MEMORY_THRESHOLD=85

# Umbral de tiempo de respuesta para alertas (milisegundos, por defecto 5000)
RESPONSE_TIME_THRESHOLD=5000

# Umbral de tasa de error para alertas (decimal, por defecto 0.05 = 5%)
ERROR_RATE_THRESHOLD=0.05

# Umbral de espacio en disco para alertas (porcentaje, por defecto 90)
DISK_THRESHOLD=90

# === CONFIGURACIÓN DE INTERVALOS ===

# Intervalo de health checks (milisegundos, por defecto 30000 = 30 segundos)
HEALTH_CHECK_INTERVAL=30000

# Intervalo de broadcast de métricas WebSocket (milisegundos, por defecto 5000 = 5 segundos)
METRICS_BROADCAST_INTERVAL=5000

# Tiempo de retención de métricas en Redis (horas, por defecto 24)
METRICS_RETENTION_HOURS=24

# === CONFIGURACIÓN DE BACKUP ===

# Habilitar backups automáticos (true/false, por defecto true)
ENABLE_AUTO_BACKUP=true

# Horario de backup diario (formato cron, por defecto "0 3 * * *" = 3 AM)
BACKUP_SCHEDULE="0 3 * * *"

# Horario de limpieza semanal (formato cron, por defecto "0 2 * * 0" = 2 AM domingos)
CLEANUP_SCHEDULE="0 2 * * 0"

# === CONFIGURACIÓN DEL SISTEMA DE SEGURIDAD ===

# Días de retención de backups (por defecto 7)
BACKUP_RETENTION_DAYS=7

# Número máximo de backups a mantener (por defecto 30)
MAX_BACKUPS=30

# Intentos de login fallidos antes de bloquear (por defecto 5)
MAX_FAILED_LOGINS=5

# Umbral de actividad sospechosa (eventos por hora, por defecto 10)
SUSPICIOUS_ACTIVITY_THRESHOLD=10

# Umbral de detección de DDoS (requests por minuto, por defecto 100)
DDOS_THRESHOLD=100

# Intervalo de verificación de seguridad (milisegundos, por defecto 60000 = 1 minuto)
SECURITY_CHECK_INTERVAL=60000

# Horas de retención de logs de seguridad (por defecto 24)
SECURITY_LOG_RETENTION_HOURS=24

# Rate limiting - Mensajes por minuto (por defecto 10)
RATE_LIMIT_MESSAGES_PER_MINUTE=10

# Rate limiting - Mensajes por hora (por defecto 100)
RATE_LIMIT_MESSAGES_PER_HOUR=100

# Rate limiting - Pedidos por hora (por defecto 3)
RATE_LIMIT_ORDERS_PER_HOUR=3

# === CONFIGURACIÓN DE CACHÉ GEMINI ===

# TTL de caché en segundos (por defecto 86400 = 24 horas)
GEMINI_CACHE_TTL=86400

# Número máximo de entradas en caché (por defecto 10000)
GEMINI_CACHE_MAX_KEYS=10000

# Habilitar normalización de mensajes para mejor hit rate (true/false, por defecto true)
GEMINI_CACHE_NORMALIZATION=true

# === CONFIGURACIÓN DE DESARROLLO (OPCIONAL) ===

# Modo de desarrollo (true/false, por defecto false)
NODE_ENV=production

# Nivel de logging (error, warn, info, debug, por defecto info)
LOG_LEVEL=info

# Habilitar logs detallados de WebSocket (true/false, por defecto false)
WEBSOCKET_DEBUG=false

# Habilitar logs detallados de métricas (true/false, por defecto false)
METRICS_DEBUG=false